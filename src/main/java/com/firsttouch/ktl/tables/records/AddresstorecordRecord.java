/*
 * This file is generated by jOOQ.
 */
package com.firsttouch.ktl.tables.records;


import com.firsttouch.ktl.tables.Addresstorecord;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddresstorecordRecord extends UpdatableRecordImpl<AddresstorecordRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>app.addresstorecord.id</code>.
     */
    public AddresstorecordRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>app.addresstorecord.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>app.addresstorecord.addressId</code>.
     */
    public AddresstorecordRecord setAddressid(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>app.addresstorecord.addressId</code>.
     */
    public Integer getAddressid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>app.addresstorecord.recordId</code>.
     */
    public AddresstorecordRecord setRecordid(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>app.addresstorecord.recordId</code>.
     */
    public Integer getRecordid() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Addresstorecord.ADDRESSTORECORD.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Addresstorecord.ADDRESSTORECORD.ADDRESSID;
    }

    @Override
    public Field<Integer> field3() {
        return Addresstorecord.ADDRESSTORECORD.RECORDID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getAddressid();
    }

    @Override
    public Integer component3() {
        return getRecordid();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getAddressid();
    }

    @Override
    public Integer value3() {
        return getRecordid();
    }

    @Override
    public AddresstorecordRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AddresstorecordRecord value2(Integer value) {
        setAddressid(value);
        return this;
    }

    @Override
    public AddresstorecordRecord value3(Integer value) {
        setRecordid(value);
        return this;
    }

    @Override
    public AddresstorecordRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddresstorecordRecord
     */
    public AddresstorecordRecord() {
        super(Addresstorecord.ADDRESSTORECORD);
    }

    /**
     * Create a detached, initialised AddresstorecordRecord
     */
    public AddresstorecordRecord(Integer id, Integer addressid, Integer recordid) {
        super(Addresstorecord.ADDRESSTORECORD);

        setId(id);
        setAddressid(addressid);
        setRecordid(recordid);
    }

    /**
     * Create a detached, initialised AddresstorecordRecord
     */
    public AddresstorecordRecord(com.firsttouch.ktl.tables.pojos.Addresstorecord value) {
        super(Addresstorecord.ADDRESSTORECORD);

        if (value != null) {
            setId(value.getId());
            setAddressid(value.getAddressid());
            setRecordid(value.getRecordid());
        }
    }
}
